CREATE TABLE Worker
(
WORKER_ID INT PRIMARY KEY,
FIRST_NAME VARCHAR(25),
LAST_NAME VARCHAR(25),
SALARY INT,
JOINING_DATE DATETIME,
DEPARTMENT VARCHAR(25)
);

+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| WORKER_ID    | int         | NO   | PRI | NULL    |       |
| FIRST_NAME   | varchar(25) | YES  |     | NULL    |       |
| LAST_NAME    | varchar(25) | YES  |     | NULL    |       |
| SALARY       | int         | YES  |     | NULL    |       |
| JOINING_DATE | datetime    | YES  |     | NULL    |       |
| DEPARTMENT   | varchar(25) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+


insert into worker values(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR');
insert into worker values(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin');
insert into worker values(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR');
insert into worker values(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin');
insert into worker values(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin');
insert into worker values(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account');
insert into worker values(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account');
insert into worker values(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

select * from worker;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+

CREATE TABLE Bonus (
WORKER_REF_ID INT,
BONUS_AMOUNT INT,
BONUS_DATE DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker(WORKER_ID)
ON DELETE CASCADE
);

desc bonus;
+---------------+----------+------+-----+---------+-------+
| Field         | Type     | Null | Key | Default | Extra |
+---------------+----------+------+-----+---------+-------+
| WORKER_REF_ID | int      | YES  | MUL | NULL    |       |
| BONUS_AMOUNT  | int      | YES  |     | NULL    |       |
| BONUS_DATE    | datetime | YES  |     | NULL    |       |
+---------------+----------+------+-----+---------+-------+

insert into bonus values(001, 5000, '16-02-20');
insert into bonus values(002, 3000, '16-06-11');
insert into bonus values(003, 4000, '16-02-20');
insert into bonus values(001, 4500, '16-02-20');
insert into bonus values(002, 3500, '16-06-11');

select * from bonus;
+---------------+--------------+---------------------+
| WORKER_REF_ID | BONUS_AMOUNT | BONUS_DATE          |
+---------------+--------------+---------------------+
|             1 |         5000 | 2016-02-20 00:00:00 |
|             2 |         3000 | 2016-06-11 00:00:00 |
|             3 |         4000 | 2016-02-20 00:00:00 |
|             1 |         4500 | 2016-02-20 00:00:00 |
|             2 |         3500 | 2016-06-11 00:00:00 |
+---------------+--------------+---------------------+

CREATE TABLE Title (
WORKER_REF_ID INT,
WORKER_TITLE VARCHAR(25),
AFFECTED_FROM DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker(WORKER_ID)
ON DELETE CASCADE
);

desc title;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| WORKER_REF_ID | int         | YES  | MUL | NULL    |       |
| WORKER_TITLE  | varchar(25) | YES  |     | NULL    |       |
| AFFECTED_FROM | datetime    | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+

insert into title values(001, 'Manager', '2016-02-20 00:00:00');
insert into title values(002, 'Executive', '2016-06-11 00:00:00');
insert into title values(008, 'Executive', '2016-06-11 00:00:00');
insert into title values(005, 'Manager', '2016-06-11 00:00:00');
insert into title values(004, 'Asst. Manager', '2016-06-11 00:00:00');
insert into title values(007, 'Executive', '2016-06-11 00:00:00');
insert into title values(006, 'Lead', '2016-06-11 00:00:00');
insert into title values(003, 'Lead', '2016-06-11 00:00:00');

select * from title;
+---------------+---------------+---------------------+
| WORKER_REF_ID | WORKER_TITLE  | AFFECTED_FROM       |
+---------------+---------------+---------------------+
|             1 | Manager       | 2016-02-20 00:00:00 |
|             2 | Executive     | 2016-06-11 00:00:00 |
|             8 | Executive     | 2016-06-11 00:00:00 |
|             5 | Manager       | 2016-06-11 00:00:00 |
|             4 | Asst. Manager | 2016-06-11 00:00:00 |
|             7 | Executive     | 2016-06-11 00:00:00 |
|             6 | Lead          | 2016-06-11 00:00:00 |
|             3 | Lead          | 2016-06-11 00:00:00 |
+---------------+---------------+---------------------+

1. Write an SQL query to show the second highest salary from a Worker table.
Ans-
select max(salary) from worker where salary <(select max(salary) from worker);
+-------------+
| max(salary) |
+-------------+
|      300000 |
+-------------+

2. Write an SQL query to determine the 5 highest salary from a Worker table.
Ans-
select * from worker order by salary desc limit 5;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+

3. Write an SQL query to show only even rows from a Worker table.
Ans-
 select * from worker where worker_id%2=0;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4. Write an SQL query to fetch the no. of workers for each department in descending order
from the Worker table.
Ans-
select department,count(worker_id) No_of_Workers
    -> from worker
    -> group by department
    -> order by No_of_Workers desc;
+------------+---------------+
| department | No_of_Workers |
+------------+---------------+
| Admin      |             4 |
| HR         |             2 |
| Account    |             2 |
+------------+---------------+

5. Write an SQL query to fetch the list of employees with the same salary from the Worker
table
Ans-
SELECT first_name,salary
FROM worker
WHERE Salary IN (
    SELECT Salary
    FROM worker
    GROUP BY Salary
    HAVING COUNT(*) > 1
)
+------------+--------+
| first_name | salary |
+------------+--------+
| Amitabh    | 500000 |
| Vivek      | 500000 |
+------------+--------+
